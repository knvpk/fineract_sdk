/* tslint:disable */
/* eslint-disable */
/**
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * The version of the OpenAPI document: 1.5.0-66-gffae7d4-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { MonetaryCurrency } from './monetary-currency';
import { Money } from './money';

/**
 * 
 * @export
 * @interface LoanProductRelatedDetail
 */
export interface LoanProductRelatedDetail {
    /**
     * 
     * @type {MonetaryCurrency}
     * @memberof LoanProductRelatedDetail
     */
    currency?: MonetaryCurrency;
    /**
     * 
     * @type {Money}
     * @memberof LoanProductRelatedDetail
     */
    principal?: Money;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    nominalInterestRatePerPeriod?: number;
    /**
     * 
     * @type {string}
     * @memberof LoanProductRelatedDetail
     */
    interestPeriodFrequencyType?: LoanProductRelatedDetailInterestPeriodFrequencyTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    annualNominalInterestRate?: number;
    /**
     * 
     * @type {string}
     * @memberof LoanProductRelatedDetail
     */
    interestMethod?: LoanProductRelatedDetailInterestMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof LoanProductRelatedDetail
     */
    interestCalculationPeriodMethod?: LoanProductRelatedDetailInterestCalculationPeriodMethodEnum;
    /**
     * 
     * @type {boolean}
     * @memberof LoanProductRelatedDetail
     */
    allowPartialPeriodInterestCalcualtion?: boolean;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    repayEvery?: number;
    /**
     * 
     * @type {string}
     * @memberof LoanProductRelatedDetail
     */
    repaymentPeriodFrequencyType?: LoanProductRelatedDetailRepaymentPeriodFrequencyTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    numberOfRepayments?: number;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    graceOnPrincipalPayment?: number;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    graceOnInterestPayment?: number;
    /**
     * 
     * @type {string}
     * @memberof LoanProductRelatedDetail
     */
    amortizationMethod?: LoanProductRelatedDetailAmortizationMethodEnum;
    /**
     * 
     * @type {Money}
     * @memberof LoanProductRelatedDetail
     */
    inArrearsTolerance?: Money;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    graceOnArrearsAgeing?: number;
    /**
     * 
     * @type {boolean}
     * @memberof LoanProductRelatedDetail
     */
    interestRecalculationEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LoanProductRelatedDetail
     */
    equalAmortization?: boolean;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    graceOnDueDate?: number;
    /**
     * 
     * @type {number}
     * @memberof LoanProductRelatedDetail
     */
    arrearsTolerance?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum LoanProductRelatedDetailInterestPeriodFrequencyTypeEnum {
    Days = 'DAYS',
    Weeks = 'WEEKS',
    Months = 'MONTHS',
    Years = 'YEARS',
    WholeTerm = 'WHOLE_TERM',
    Invalid = 'INVALID'
}
/**
    * @export
    * @enum {string}
    */
export enum LoanProductRelatedDetailInterestMethodEnum {
    DecliningBalance = 'DECLINING_BALANCE',
    Flat = 'FLAT',
    Invalid = 'INVALID'
}
/**
    * @export
    * @enum {string}
    */
export enum LoanProductRelatedDetailInterestCalculationPeriodMethodEnum {
    Daily = 'DAILY',
    SameAsRepaymentPeriod = 'SAME_AS_REPAYMENT_PERIOD',
    Invalid = 'INVALID'
}
/**
    * @export
    * @enum {string}
    */
export enum LoanProductRelatedDetailRepaymentPeriodFrequencyTypeEnum {
    Days = 'DAYS',
    Weeks = 'WEEKS',
    Months = 'MONTHS',
    Years = 'YEARS',
    WholeTerm = 'WHOLE_TERM',
    Invalid = 'INVALID'
}
/**
    * @export
    * @enum {string}
    */
export enum LoanProductRelatedDetailAmortizationMethodEnum {
    EqualPrincipal = 'EQUAL_PRINCIPAL',
    EqualInstallments = 'EQUAL_INSTALLMENTS',
    Invalid = 'INVALID'
}


